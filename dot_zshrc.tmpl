## Activate Powerlevel10k Instant Prompt.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

ZSH_AUTOSUGGEST_MANUAL_REBIND=1

WORDCHARS=''

# When searching for history entries in the line editor, do not display
# duplicates of a line previously found, even if the duplicates are not contiguous.
setopt histfindnodups

export VOLTA_HOME=~/.volta

typeset -U path PATH
path=(
  $VOLTA_HOME/bin
  ~/.cargo/bin
  ~/.local/bin
  ~/.rd/bin
  ~/.node_modules/bin
  $path
)
export PATH

eval "$(/opt/homebrew/bin/brew shellenv)"

# Must be called before Zim is initialized
fpath+=("$HOMEBREW_PREFIX/share/zsh/site-functions")


# ----------------------------------------------------------------------
# Zim
# use degit tool by default to install modules
zstyle ':zim:zmodule' use 'degit'
zstyle ':zim:input' double-dot-expand yes
zstyle ':zim:*' case-sensitivity sensitive

# Completion styling
# zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
# zstyle ':completion:*' menu no
# zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

export ZIM_HOME=~/.zim

# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

# Initialize modules.
source ${ZIM_HOME}/init.zsh
# ----------------------------------------------------------------------

# Disable ambiguous completion
#zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' '+r:|?=**'
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'


# Bash completion
autoload -Uz bashcompinit && bashcompinit
complete -C aws_completer aws


export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_BAT=1
export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_BUNDLE_FILE=~/.brewfile

export npm_config_prefix=~/.node_modules

export EDITOR=nvim
export VISUAL=nvim
export DIFFPROG='nvim -d'
export SUDO_EDITOR=nvim

export CLICOLOR=YES

export BROWSER=open

# Parevent creation of desktop files and file associations for wine applications
export WINEDLLOVERRIDES=winemenubuilder.exe,mscoree,mshtml=

export GROFF_NO_SGR=yes
export AWS_PAGER=

# sar
export S_COLORS=auto

export LS_COLORS="$(vivid generate {{ (index .theme .current_theme).vivid }})"

# less
export LESS_TERMCAP_mb=$'\E[1;31m'  # Begins blinking.
export LESS_TERMCAP_md=$'\E[1;31m'  # Begins bold.
export LESS_TERMCAP_me=$'\E[0m'     # Ends mode.
export LESS_TERMCAP_ue=$'\E[0m'     # Ends underline.
export LESS_TERMCAP_us=$'\E[1;32m'  # Begins underline.

# FZF
[[ -f ~/.config/fzf/themees/{{ (index .theme .current_theme).fzf }}.sh ]] && source ~/.config/fzf/themees/{{ (index .theme .current_theme).fzf }}.sh


# TF
export TG_TF_FORWARD_STDOUT=true

export BUILDKIT_PROGRESS=plain

# Loki CLI
eval "$(logcli --completion-script-zsh)"

# aws-sso-cli
__aws_sso_profile_complete() {
     local _args=${AWS_SSO_HELPER_ARGS:- -L error}
    _multi_parts : "($(/opt/homebrew/bin/aws-sso ${=_args} list --csv Profile))"
}

compdef __aws_sso_profile_complete aws-sso-profile
complete -C /opt/homebrew/bin/aws-sso aws-sso

# Zellij
export ZELLIJ_AUTO_EXIT=true

{{ if eq .chezmoi.os "darwin" -}}
# Android Studio
export ANDROID_HOME=$HOME/Library/Android/sdk

# k3d
export K3D_FIX_DNS=0
{{- end }}

# k9s
export K9S_CONFIG_DIR=$HOME/.config/k9s

# Specify which neovim configuration folder to use
export NVIM_APPNAME=nvim-lazy

# Use EMACS emulation mode
bindkey -e

KEYTIMEOUT=10
HISTSIZE=50000
SAVEHIST=25000

# Up
autoload -Uz up-line-or-beginning-search
zle -N up-line-or-beginning-search
bindkey $terminfo[kcuu1] up-line-or-beginning-search
bindkey '^[[A'           up-line-or-beginning-search

# Down
autoload -Uz down-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey $terminfo[kcud1] down-line-or-beginning-search
bindkey '^[[B'           down-line-or-beginning-search

# Aliases
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias batp='bat --paging=auto'
alias chmod='chmod -v'
alias chown='chown -v'
alias cp='cp -v'
alias dig='dig +noall +answer +stats'
alias gap='git add --patch'
alias grep='grep --color=auto'
alias jq='jaq'
alias k='kubectl'
alias lg='lazygit'
alias ls='gls --color=auto'
alias ll='ls -lh'
alias lsports='ss -tunalp | column -t'
alias mv='mv -v'
alias rm='rm -v'
alias vim='nvim'


[[ -f ~/.functions.sh ]] && source ~/.functions.sh

# 1password shell plugins
[[ -f ~/.config/op/plugins.sh ]] && source ~/.config/op/plugins.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
